"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/services/weatherService.ts":
/*!****************************************!*\
  !*** ./src/services/weatherService.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   weatherService: () => (/* binding */ weatherService)\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:5000/api\" || 0;\nclass WeatherService {\n    async getLatestData(stationId) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/weather/data/\").concat(stationId, \"/latest\"));\n        if (!response.ok) {\n            throw new Error('Failed to fetch latest data');\n        }\n        const result = await response.json();\n        return result.data || {};\n    }\n    async getHistoricalData(stationId) {\n        let timeRange = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : '24h', parameters = arguments.length > 2 ? arguments[2] : void 0;\n        const params = new URLSearchParams({\n            timeRange,\n            ...parameters && {\n                parameters: parameters.join(',')\n            }\n        });\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/weather/data/\").concat(stationId, \"?\").concat(params));\n        if (!response.ok) {\n            throw new Error('Failed to fetch historical data');\n        }\n        const result = await response.json();\n        return result.data || [];\n    }\n    async getSummary(stationId) {\n        let timeRange = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : '24h';\n        const params = new URLSearchParams({\n            timeRange\n        });\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/weather/data/\").concat(stationId, \"/summary?\").concat(params));\n        if (!response.ok) {\n            throw new Error('Failed to fetch summary');\n        }\n        const result = await response.json();\n        return result.summary || result;\n    }\n    async getStations() {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/weather/stations\"));\n        if (!response.ok) {\n            throw new Error('Failed to fetch stations');\n        }\n        const result = await response.json();\n        return result.stations || [];\n    }\n    async getAlerts(stationId, acknowledged) {\n        const params = new URLSearchParams();\n        if (stationId) params.append('stationId', stationId);\n        if (acknowledged !== undefined) params.append('acknowledged', acknowledged.toString());\n        const url = stationId ? \"\".concat(API_BASE_URL, \"/alerts/\").concat(stationId, \"?\").concat(params) : \"\".concat(API_BASE_URL, \"/alerts?\").concat(params);\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error('Failed to fetch alerts');\n        }\n        return response.json();\n    }\n    async acknowledgeAlert(alertId) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/alerts/\").concat(alertId, \"/acknowledge\"), {\n            method: 'PUT'\n        });\n        if (!response.ok) {\n            throw new Error('Failed to acknowledge alert');\n        }\n    }\n    async getAlertSummary(stationId) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/alerts/summary/\").concat(stationId));\n        if (!response.ok) {\n            throw new Error('Failed to fetch alert summary');\n        }\n        return response.json();\n    }\n    async exportData(stationId) {\n        let format = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'csv', timeRange = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : '24h';\n        const params = new URLSearchParams({\n            format,\n            timeRange\n        });\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/weather/export/\").concat(stationId, \"?\").concat(params));\n        if (!response.ok) {\n            throw new Error('Failed to export data');\n        }\n        if (format === 'csv') {\n            return response.text();\n        }\n        return response.json();\n    }\n}\nconst weatherService = new WeatherService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/services/weatherService.ts\n"));

/***/ })

});